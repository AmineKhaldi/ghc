
==================== CorePrep ====================
Result size of CorePrep
  = {terms: 22, types: 10, coercions: 0, joins: 0/0}

Rec {
Par01.depth [Occ=LoopBreaker] :: GHC.Types.Int -> GHC.Types.Int
[GblId, Arity=1, Str=<L>, Unf=OtherCon []]
Par01.depth
  = \ (d :: GHC.Types.Int) ->
      case GHC.Prim.par# @GHC.Types.Int d of { __DEFAULT ->
      Par01.depth d
      }
end Rec }

Par01.$trModule4 :: GHC.Prim.Addr#
[GblId, Unf=OtherCon []]
Par01.$trModule4 = "main"#

Par01.$trModule3 :: GHC.Types.TrName
[GblId, Unf=OtherCon []]
Par01.$trModule3 = GHC.Types.TrNameS Par01.$trModule4

Par01.$trModule2 :: GHC.Prim.Addr#
[GblId, Unf=OtherCon []]
Par01.$trModule2 = "Par01"#

Par01.$trModule1 :: GHC.Types.TrName
[GblId, Unf=OtherCon []]
Par01.$trModule1 = GHC.Types.TrNameS Par01.$trModule2

Par01.$trModule :: GHC.Types.Module
[GblId, Unf=OtherCon []]
Par01.$trModule
  = GHC.Types.Module Par01.$trModule3 Par01.$trModule1



